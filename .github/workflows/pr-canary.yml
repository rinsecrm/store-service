name: PR Canary Build

# Build canary image for PR testing
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**'
      - '!.github/**'

env:
  GO_VERSION: '1.25.1'
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  build-canary:
    name: Build PR Canary Image
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper SHA

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Configure Go environment
      run: |
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: make test

    - name: Build binary
      run: |
        VERSION="pr-${{ github.event.number }}-$(git rev-parse --short HEAD)"
        echo "Building PR canary version: $VERSION"
        go build -ldflags="-X main.version=$VERSION" -o bin/${{ github.event.repository.name }} .

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push PR canary image
      run: |
        PR_NUMBER=${{ github.event.number }}
        
        # Build with PR number tag (used by ApplicationSet)
        docker build -f Dockerfile.ci -t ${{ env.DOCKER_IMAGE }}:pr-$PR_NUMBER .
        docker push ${{ env.DOCKER_IMAGE }}:pr-$PR_NUMBER
        
        echo "Built and pushed canary image:"
        echo "- ${{ env.DOCKER_IMAGE }}:pr-$PR_NUMBER (used by ApplicationSet)"

    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.payload.pull_request.number;
          
          const comment = `ðŸš€ **PR Canary Built Successfully!**
          
          **Image Tag:**
          - \`ghcr.io/${{ github.repository }}:pr-${prNumber}\` (used by ArgoCD)
          
          **Testing:**
          Once ArgoCD deploys this canary, you can test it by adding the header:
          \`X-Canary: ${prNumber}\`
          
          The canary will be automatically cleaned up when this PR is closed.`;
          
          github.rest.issues.createComment({
            issue_number: prNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
